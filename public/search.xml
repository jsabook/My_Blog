<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我在写博客常用的markdown语法和技巧</title>
      <link href="/2021/05/24/%E6%88%91%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E5%92%8C%E6%8A%80%E5%B7%A7/"/>
      <url>/2021/05/24/%E6%88%91%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E5%92%8C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="最近没有怎么写博客进行总结，今天准备对之前常用的markdown语法进行总结"><a href="#最近没有怎么写博客进行总结，今天准备对之前常用的markdown语法进行总结" class="headerlink" title="最近没有怎么写博客进行总结，今天准备对之前常用的markdown语法进行总结"></a>最近没有怎么写博客进行总结，今天准备对之前常用的markdown语法进行总结</h2><a id="more"></a><h4 id="1-Editer"><a href="#1-Editer" class="headerlink" title="1.Editer"></a>1.Editer</h4><p>首推本地Markdown编辑器<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></p><h4 id="2-图片"><a href="#2-图片" class="headerlink" title="2.图片"></a>2.图片</h4><p>本地引用语法 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](foldername&#x2F;1.png)</span><br></pre></td></tr></table></figure><p>使用<img src="" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;static.runoob.com&#x2F;images&#x2F;runoob-logo.png&quot; width&#x3D;&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="3-视频"><a href="#3-视频" class="headerlink" title="3.视频"></a>3.视频</h4><p>比如使用B站作为自己的视频存储仓库，使用外链引用即可</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E5%9C%A8%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E7%9A%84markdown%E8%AF%AD%E6%B3%95%E5%92%8C%E6%8A%80%E5%B7%A7/1.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;460541448&amp;bvid&#x3D;BV1e541137Tc&amp;cid&#x3D;336346063&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><h4 id="4-PDF"><a href="#4-PDF" class="headerlink" title="4.PDF"></a>4.PDF</h4><p>首先也需要将pdf文件上传到云端，采用链接引用</p><p>语法：<div class="row">    <embed src="https://arxiv.org/pdf/xxxx.pdf" width="100%" height="550" type="application/pdf"></div></p><hr><h2 id="OK！本期关于markdown语法进行总结就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于markdown语法进行总结就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于markdown语法进行总结就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于markdown语法进行总结就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用Github+Actions实现Hexo博客自动化部署</title>
      <link href="/2021/05/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/05/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>之前为了更好的学习前端技术，也就在Github仓库上来建立了自己的个人博客。在使用了一段时间之后，我也发现了一种新的玩法，可以使用Github的Actions来对自己的博客站点内容进行持续集成和持续部署，也就是说，根据本篇的内容，你只需要3个git命令就能实现Hexo博客的部署，强烈建议小伙伴们积极动手试一试，在提升上线效率上极有帮助。</p><h1 id="在本文中主要介绍我是如何使用Github-Actions为自己的个人博客实现CI-CD的自动化部署"><a href="#在本文中主要介绍我是如何使用Github-Actions为自己的个人博客实现CI-CD的自动化部署" class="headerlink" title="在本文中主要介绍我是如何使用Github+Actions为自己的个人博客实现CI/CD的自动化部署"></a>在本文中主要介绍我是如何使用Github+Actions为自己的个人博客实现CI/CD的自动化部署</h1><a id="more"></a><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h4 id="1-什么是Devops和CI-CD"><a href="#1-什么是Devops和CI-CD" class="headerlink" title="1.什么是Devops和CI/CD"></a>1.什么是Devops和CI/CD</h4><p>这里引用B站大佬up主<a href="https://space.bilibili.com/95256449" target="_blank" rel="noopener">遇见狂神说</a>的视频为大家解读，大家可以了解一下整个的应用流程。</p><iframe src="//player.bilibili.com/player.html?aid=285879510&bvid=BV1zf4y127vu&cid=200860220&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="850" height="550" controls> </iframe><h4 id="2-什么是Github-Actions"><a href="#2-什么是Github-Actions" class="headerlink" title="2.什么是Github+Actions"></a>2.什么是Github+Actions</h4><p>大家可以查看这篇文章简单了解一下  <a href="https://www.infoq.cn/article/d0mtapbgpbhf3r-cuvf3" target="_blank" rel="noopener">所有开源项目免费使用，GitHub 内置 CI/CD 终于来了！</a></p><p>这里附上Github官方的介绍文档  <a href="https://docs.github.com/en/actions" target="_blank" rel="noopener">GitHub Actions</a></p><h2 id="二、具体步骤"><a href="#二、具体步骤" class="headerlink" title="二、具体步骤"></a>二、具体步骤</h2><p>整体步骤分为两个部分</p><h4 id="一、将博客部署到Github-page"><a href="#一、将博客部署到Github-page" class="headerlink" title="一、将博客部署到Github page"></a>一、将博客部署到Github page</h4><h4 id="1-创建Github-page仓库"><a href="#1-创建Github-page仓库" class="headerlink" title="1.创建Github page仓库"></a>1.创建Github page仓库</h4><p>首先你需要拥有一个存储渲染文件的博客repository</p><p>将仓库名命名为your_username.github.io，这个仓库用来存储Hexo渲染的Html文件</p><p>具体操作可以参考我之前的两篇文章</p><p>1.<a href="http://sujie-168.top/2020/04/11/我的博客创建之路1/">我的博客创建之路1</a>    </p><p>2.<a href="http://sujie-168.top/2020/04/16/我的博客创建之路2/">我的博客创建之路2</a></p><p>也可以参考管家小e的<a href="https://mp.weixin.qq.com/mp/homepage?__biz=MzU4NDcxNjQ2Ng==&hid=1&sn=debf3376e6c934da259097b1886297d7&scene=18#wechat_redirect" target="_blank" rel="noopener">网站搭建</a>专栏的前三篇来解决</p><h4 id="2-博客目标效果"><a href="#2-博客目标效果" class="headerlink" title="2.博客目标效果"></a>2.博客目标效果</h4><p>打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a>进行预览，即可得到与下图相似的结果</p><p><img src="https://d33wubrfki0l68.cloudfront.net/5997a40576f3beca7bbbd86fe79a795e9d520d8e/87f88/themes/screenshots/landscape.png" alt=""></p><h4 id="二、配置博客文件存储仓库"><a href="#二、配置博客文件存储仓库" class="headerlink" title="二、配置博客文件存储仓库"></a>二、配置博客文件存储仓库</h4><h4 id="2-创建博客仓库"><a href="#2-创建博客仓库" class="headerlink" title="2.创建博客仓库"></a>2.创建博客仓库</h4><p>新建博客文章存储的public仓库(公开)</p><p>可以将仓库名命名为My_Blog，这个仓库将被用来存储你的所有博客文章</p><ul><li><h5 id="创建token"><a href="#创建token" class="headerlink" title="创建token"></a>创建token</h5></li></ul><p>这一步可以完全根据github官方给出的<a href="https://docs.github.com/cn/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener">创建个人访问令牌</a>教程操作</p><ul><li><h5 id="配置密钥secret"><a href="#配置密钥secret" class="headerlink" title="配置密钥secret"></a>配置密钥secret</h5></li></ul><p>将创建好的 Personal Access Token 添加到仓库的 Secrets 中，并设置名称， 如下图：</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/7.jpg" alt=""></p><ul><li>创建 workflow 脚本</li></ul><p>在项目根目录下创建 <code>.github/workflows</code> 文件夹，并在文件夹下创建 YAML 文件用于编写任务执行脚本。</p><p>点击项目下的Actions</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/8.jpg" alt=""></p><p>点击Set up this workflow</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/9.jpg" alt=""></p><p>配置main.yml文件，设置工作流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">name: Deploy My_Blog  #自动化的名称</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  # Triggers the workflow on push or pull request events but only for the main branch</span><br><span class="line">  push: # push的时候触发</span><br><span class="line">    branches: [ main ]  # 哪些分支需要触发</span><br><span class="line">  pull_request:  </span><br><span class="line">    branches: [ dev ]</span><br><span class="line"></span><br><span class="line"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span><br><span class="line">jobs:</span><br><span class="line">  # This workflow contains a single job called &quot;build&quot;</span><br><span class="line">  Blog_CI-CD:</span><br><span class="line">    runs-on: ubuntu-latest  # 服务器环境</span><br><span class="line">    # Steps represent a sequence of tasks that will be executed as part of the job</span><br><span class="line">    </span><br><span class="line">    steps:</span><br><span class="line">      # 检查代码</span><br><span class="line">      - name: Checkout</span><br><span class="line">        uses: actions&#x2F;checkout@v2  #软件市场的名称</span><br><span class="line">        with: # 参数</span><br><span class="line">          submodules: true</span><br><span class="line">          persist-credentials: false</span><br><span class="line">          </span><br><span class="line">      - name: Setup Node.js</span><br><span class="line">       # 设置 node.js 环境</span><br><span class="line">        uses: actions&#x2F;setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: &#39;12&#39;</span><br><span class="line">          </span><br><span class="line">      - name: Cache node modules</span><br><span class="line">      # 设置包缓存目录，避免每次下载</span><br><span class="line">        uses: actions&#x2F;cache@v1</span><br><span class="line">        with:</span><br><span class="line">          path: ~&#x2F;.npm</span><br><span class="line">          key: $&#123;&#123; runner.os &#125;&#125;-node-$&#123;&#123; hashFiles(&#39;**&#x2F;package-lock.json&#39;) &#125;&#125;</span><br><span class="line">          </span><br><span class="line">      # 配置Hexo环境 </span><br><span class="line">      - name: Setup Hexo</span><br><span class="line">        env:</span><br><span class="line">          ACTION_DEPLOY_KEY: $&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line">          npm install</span><br><span class="line">           </span><br><span class="line">      </span><br><span class="line">      # 生成静态文件</span><br><span class="line">      - name: Build</span><br><span class="line">        run: |</span><br><span class="line">          hexo clean </span><br><span class="line">          hexo g</span><br><span class="line">        </span><br><span class="line">      # 2、部署到 GitHub Pages</span><br><span class="line">      - name: upload GitHub repository</span><br><span class="line">        env: </span><br><span class="line">          # Github 仓库</span><br><span class="line">          GITHUB_REPO: github.com&#x2F;username&#x2F;username.github.io</span><br><span class="line">         # 将编译后的博客文件推送到指定仓库</span><br><span class="line">        run: |</span><br><span class="line">          cd .&#x2F;public &amp;&amp; git init &amp;&amp; git add .</span><br><span class="line">          git config user.name &quot;username&quot;       #username改为你github的用户名</span><br><span class="line">          git config user.email &quot;your_Email&quot;     #username改为你github的注册邮箱</span><br><span class="line">          git add .</span><br><span class="line">          git commit -m &quot;GitHub Actions Auto Builder at $(date +&#39;%Y-%m-%d %H:%M:%S&#39;)&quot;</span><br><span class="line">          git push --force --quiet &quot;https:&#x2F;&#x2F;$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;@$GITHUB_REPO&quot; master:master</span><br></pre></td></tr></table></figure><p>然后点击commit new file即可。</p><p>最后，我们只需要将源码推送到指定分支，GitHub Actions 就会自动帮我们部署项目啦。</p><h2 id="三、流程展示"><a href="#三、流程展示" class="headerlink" title="三、流程展示"></a>三、流程展示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在本地写好博客文章</span><br><span class="line">git checkout -b dev   #切换到dev分支</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;add a new article&quot;</span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p>在本地推送完成后，即可在My_Blog的Actions页面查看到部署情况，然后打开自己博客站点域名<a href="http://your_username.github.io查看即可。" target="_blank" rel="noopener">http://your_username.github.io查看即可。</a></p><p>1.初始化云端Ubuntu服务器的部署环境</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/11.jpg" alt=""></p><p>2.将本次提交推送到Github远端仓库</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/12.jpg" alt=""></p><p>3.workflow流程概览</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/13.jpg" alt=""></p><p>4.工作流workflow运行成功，本次部署成功</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Github-Actions%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/10.jpg" alt=""></p><h2 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h2><p>[1].知乎大佬star  <a href="https://zhuanlan.zhihu.com/p/161969042" target="_blank" rel="noopener">使用 GitHub Actions 自动部署 Hexo 博客到 GitHub Pages</a></p><p>[2].知乎大佬Tommy  <a href="https://zhuanlan.zhihu.com/p/170563000" target="_blank" rel="noopener">GitHub Actions 来自动部署 Hexo</a></p><p>[3].简书大佬VictorHong  <a href="https://www.jianshu.com/p/2a5c77b4d683" target="_blank" rel="noopener">HUGO + Github + Github Action持续集成部署个人博客</a></p><h2 id="OK！本期关于如何使用Github-Actions为自己的个人博客实现CI-CD的自动化部署就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何使用Github-Actions为自己的个人博客实现CI-CD的自动化部署就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何使用Github+Actions为自己的个人博客实现CI/CD的自动化部署就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何使用Github+Actions为自己的个人博客实现CI/CD的自动化部署就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> Actions </category>
          
          <category> github </category>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Actions </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何提高在github上git clone的效率</title>
      <link href="/2021/04/13/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%9C%A8github%E4%B8%8Agit-clone%E7%9A%84%E6%95%88%E7%8E%87/"/>
      <url>/2021/04/13/%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%9C%A8github%E4%B8%8Agit-clone%E7%9A%84%E6%95%88%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p>最近在github上clone一些机器学习的项目时，发现下载速度很慢，只有几kB/s，需要等待很久，才能下载完整个项目，并且途中时长出现断连的情况，非常影响用户体验，鉴于个人难以忍受这种操作体验，所以就四处寻找解决办法，这次运气不错，在<a href="https://blog.csdn.net/a1405/article/details/115438017" target="_blank" rel="noopener">提高国内访问 GitHub 的速度的 9 种方案</a>及<a href="https://www.secn.net/article/1562784.html" target="_blank" rel="noopener">GitHub下载慢？可以试试下面的方法提升速度</a>这两篇文章里，很容易就找到了。</p><a id="more"></a><p>平时使用的话，推荐使用hub.fastgit.org镜像源或者github.com.cnpmjs.org镜像源，这两个github镜像源的使用体验个人感觉很不错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;XXXX&#x2F;仓库名.git</span><br></pre></td></tr></table></figure><p>使用方法也非常简单，将github.com替换成hub.fastgit.org即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone  https:&#x2F;&#x2F;hub.fastgit.org&#x2F;XXXX&#x2F;仓库名.git</span><br></pre></td></tr></table></figure><p>有时也会遇到将项目push到github远端速度慢的问题，这里也可以逆向思维，切换镜像源的方法，来提升上传速度。</p><p>最后这里在附上Segmentfault大佬民工哥的文章<a href="https://segmentfault.com/a/1190000023734704" target="_blank" rel="noopener">三年 Git 使用心得 &amp; 常见问题整理</a>，希望可以帮到大家。</p><h2 id="OK！本期关于如何解决来自github的警告-Dependabot-alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何解决来自github的警告-Dependabot-alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何解决来自github的警告:Dependabot alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何解决来自github的警告:Dependabot alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到我的个人博客</title>
      <link href="/2021/03/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/03/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到我的博客，在这里你可以看到很多内容"><a href="#欢迎来到我的博客，在这里你可以看到很多内容" class="headerlink" title="欢迎来到我的博客，在这里你可以看到很多内容"></a>欢迎来到我的博客，在这里你可以看到很多内容</h1><p>包括但不限于下面的内容</p><ul><li>机器人技术</li><li>机器学习与深度学习</li><li>前端与后端技术笔记</li><li>ROS与SLAM技术</li><li>算法与Leetcode刷题笔记</li><li>C/C++，Python，SQL，Linux</li><li>机器学习顶会Paper笔记</li><li>暂时就先定下这些内容，希望对大家有所帮助</li></ul><h2 id="在此感谢来自各位朋友的支持"><a href="#在此感谢来自各位朋友的支持" class="headerlink" title="在此感谢来自各位朋友的支持"></a>在此感谢来自各位朋友的支持</h2><script type='text/javascript' id='clustrmaps' src='//cdn.clustrmaps.com/map_v2.js?cl=080808&w=850&t=n&d=1EQ97n4ck87LVhxE06s_TsXtw-bfq_aW5XONiyJT1xo&co=ffffff&cmo=3acc3a&cmn=ff5353&ct=808080'></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>How to push to github</title>
      <link href="/2021/03/05/How-to-push-to-github/"/>
      <url>/2021/03/05/How-to-push-to-github/</url>
      
        <content type="html"><![CDATA[<p>之前刚开始接触Github的时候，有太多需要注意的点需要care，所以很多时候都畏手畏脚，导致有许多次想要尝试却铩羽而归，这次就以如何push自己的项目到github仓库上举例</p><h1 id="本文将介绍如何将自己的项目push到github上，如何及时发布自己项目的每次更新"><a href="#本文将介绍如何将自己的项目push到github上，如何及时发布自己项目的每次更新" class="headerlink" title="本文将介绍如何将自己的项目push到github上，如何及时发布自己项目的每次更新"></a>本文将介绍如何将自己的项目push到github上，如何及时发布自己项目的每次更新</h1><a id="more"></a><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/push%20to%20github.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b dev #创建一个名为dev的新分支并切换到该分支，如已有dev分支，去掉-b即可切换到dev分支</span><br><span class="line">git add .  # 增加改动</span><br><span class="line">git commit -m &quot;first commit&quot;  # 提交本次名为first commit的修改</span><br><span class="line">git pull  # 如果出现冲突，则需要执行此代码</span><br><span class="line">git log -p # 查看本次提交所进行的修改，确认无误即可进行下一步操作</span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/Screenshot%202021-03-05%20221546.jpg" alt=""></p><p>然后就会在你所提交的仓库中出现一个新的New pull request请求（也就是分支合并请求）</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/pullrequest.jpg" alt=""></p><p>拉取本次pull request请求</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/request.jpg" alt=""></p><p>设置assigners，label等信息</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/set.jpg" alt=""></p><p>点击merge （合并）本次pull request</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/merge.jpg" alt=""></p><p>本次push to github完成</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/How-to-push-to-github/ok.jpg" alt=""></p><h2 id="OK！本期关于如何将自己的项目Push到github上就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何将自己的项目Push到github上就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何将自己的项目Push到github上就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何将自己的项目Push到github上就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为自己的博客添加Https</title>
      <link href="/2021/03/05/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/"/>
      <url>/2021/03/05/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/</url>
      
        <content type="html"><![CDATA[<p>之前为了更好的学习，也就在Github仓库上来建立了自己的个人博客。在使用了一段时间之后，我也发现了一个致命的缺陷，自己的网站使用http协议来进行通讯，安全性有待提升。所以今天花了一点时间将自己的博客成功的转换成支持https协议进行通讯，这样就比较Nice了。</p><h1 id="在本文中主要介绍我是如何为自己的个人博客添加Https协议通讯"><a href="#在本文中主要介绍我是如何为自己的个人博客添加Https协议通讯" class="headerlink" title="在本文中主要介绍我是如何为自己的个人博客添加Https协议通讯"></a>在本文中主要介绍我是如何为自己的个人博客添加Https协议通讯</h1><a id="more"></a><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1.注册账号"></a>1.注册账号</h3><p>注册一个<a href="https://github.com/join?source=login" target="_blank" rel="noopener">Github账号</a>或<a href="https://accounts.google.com/signup/v2/webcreateaccount?continue=https%3A%2F%2Faccounts.google.com%2FManageAccount%3Fnc%3D1&hl=zh-CN&flowName=GlifWebSignIn&flowEntry=SignUp" target="_blank" rel="noopener">Google账号</a></p><p>这里附上一篇如何注册Google账号的<a href="https://zhuanlan.zhihu.com/p/133530671" target="_blank" rel="noopener">大佬文章</a></p><h3 id="2-建设博客"><a href="#2-建设博客" class="headerlink" title="2.建设博客"></a>2.建设博客</h3><p>建立一个例如  XXX.github.io这样的个人站点</p><p>关于如何建立自己的个人博客，这里我推荐微信公众号管家小e的<a href="https://mp.weixin.qq.com/mp/homepage?__biz=MzU4NDcxNjQ2Ng==&hid=1&sn=debf3376e6c934da259097b1886297d7&scene=18#wechat_redirect" target="_blank" rel="noopener">网站搭建系列文章</a>，个人觉得很方便，很细节。</p><p>当然也可看一下我的<a href="https://sujie-168.top/tags/hexo/">博客文章</a></p><h3 id="3-购买域名"><a href="#3-购买域名" class="headerlink" title="3.购买域名"></a>3.购买域名</h3><p><a href="https://wanwang.aliyun.com/?spm=5176.12901015.0.i12901015.24f1525cA4YEMD" target="_blank" rel="noopener">购买阿里云的域名</a>无法单独ICP备案，也就是如果仅你买了阿里云的域名，而没有买服务器或者主机，那么域名没法单独ICP备案。</p><p>域名前缀可以是带自己名字的站点，后缀推荐购买.com和.cn类型。我购买了一个.top类型的（主要是便宜），购买了三年不到一百元。</p><h3 id="4-实名认证"><a href="#4-实名认证" class="headerlink" title="4.实名认证"></a>4.实名认证</h3><p>购买后进行实名认证，否则无法使用域名。</p><h2 id="二、具体操作"><a href="#二、具体操作" class="headerlink" title="二、具体操作"></a>二、具体操作</h2><p>之前以为无法使用https解析，现在才发现是自己太菜了，不过好在这次一次就弄成功了。所以想将自己的经验分享给大家，希望能对大家有所帮助。</p><p>在阿里开发者社区中找到了一篇与自己博客部署情况基本一致的文章<a href="https://developer.aliyun.com/article/715576" target="_blank" rel="noopener">GitHub/Gitee 静态页托管页部署SSL证书</a>这里供大家作为参考</p><h3 id="1-申请免费的SSL证书"><a href="#1-申请免费的SSL证书" class="headerlink" title="1.申请免费的SSL证书"></a>1.申请免费的SSL证书</h3><p>在搜索框中搜索CA证书</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/5.jpg" alt=""></p><p>找到DV单域名证书，证书个数为20，选点击购买</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/6.jpg" alt=""></p><h3 id="2-域名DNS解析"><a href="#2-域名DNS解析" class="headerlink" title="2.域名DNS解析"></a>2.域名DNS解析</h3><p>首先打开终端cmd 或者 git bash或者 terminal </p><p>执行如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping XXXX.github.io   # xxx为你在github的用户名，也是你的Github page 仓库名</span><br></pre></td></tr></table></figure><p>红框位置处的数字就是你博客的ip地址</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/8.jpg" alt=""></p><p>在框内填入得到的ip地址即可</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/4.jpg" alt=""></p><p>此时的域名已经解析成功。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/9.jpg" alt=""></p><h3 id="3-在Github上配置Https"><a href="#3-在Github上配置Https" class="headerlink" title="3.在Github上配置Https"></a>3.在Github上配置Https</h3><p>此时开始配置，打开仓库，选择settings，向下滑动鼠标，滑到下图位置。</p><p>下图说明此时的域名解析是有问题的，需要返回阿里域名控制台重新设置域名解析</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/1.jpg" alt=""></p><p>如下图显示，则证明已配置好域名解析</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/2.jpg" alt=""></p><p>勾选Enforce HTTPS选项即可</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/3.jpg" alt=""></p><p>此时再对你的站点进行访问发现已经支持https协议解析</p><p>这是之前的不安全页面，信息有被监听，被修改的风险</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/0.jpg" alt=""></p><p>这是现在的安全页面，信息不会被监听，被修改，通信过程全程加密</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/01.jpg" alt=""></p><p>这里附上<a href="https://sujie-168.top/">我的博客</a>效果以供参考</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Https/10.jpg" alt=""></p><h2 id="OK！本期关于如何为自己的个人博客添加Https协议通讯就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何为自己的个人博客添加Https协议通讯就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何为自己的个人博客添加Https协议通讯就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何为自己的个人博客添加Https协议通讯就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> https </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何订阅我的个人博客</title>
      <link href="/2021/03/01/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/03/01/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>最近研究了一下如何给自己的博客添加订阅功能，在<a href="https://zhuanlan.zhihu.com/p/111978933" target="_blank" rel="noopener">这篇文章</a>里找到了些许灵感。</p><h1 id="本文中主要介绍我是如何为自己的博客添加订阅功能以及如何订阅我的个人博客"><a href="#本文中主要介绍我是如何为自己的博客添加订阅功能以及如何订阅我的个人博客" class="headerlink" title="本文中主要介绍我是如何为自己的博客添加订阅功能以及如何订阅我的个人博客"></a>本文中主要介绍我是如何为自己的博客添加订阅功能以及如何订阅我的个人博客</h1><a id="more"></a><p>1.首先注册一个账号</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/7.jpg" alt=""></p><p>2.登录账号</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/8.jpg" alt=""></p><p>3.填写需要订阅的博客地址，当然这里也可以订阅各位大佬们的博客</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.jpg" alt=""></p><p>4.将信息补充完整</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.jpg" alt=""></p><p>5.点击add feed添加订阅</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.jpg" alt=""></p><p>6.发现报错</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.jpg" alt=""></p><p>7.更改收件形式</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.jpg" alt=""></p><p>8.RSS订阅操作完成</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%AE%A2%E9%98%85%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/6.jpg" alt=""></p><h2 id="OK！本期关于介绍了如何订阅我的博客，喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于介绍了如何订阅我的博客，喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于介绍了如何订阅我的博客，喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于介绍了如何订阅我的博客，喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> 操作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Ubuntu18.04上训练一个YOLO3模型</title>
      <link href="/2021/02/24/%E5%A6%82%E4%BD%95%E5%9C%A8Ubuntu18.04%E4%B8%8A%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AAYOLO3%E6%A8%A1%E5%9E%8B/"/>
      <url>/2021/02/24/%E5%A6%82%E4%BD%95%E5%9C%A8Ubuntu18.04%E4%B8%8A%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AAYOLO3%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>最近接触的项目需要用到目标检测算法，而<a href="https://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">Yolo模型</a>在目标检测领域独具有代表性，可以说入门首选。<a href="https://blog.csdn.net/weixin_42747301/article/details/96636614" target="_blank" rel="noopener">Ubuntu18.04下YOLOv3详解</a>是我找到对于整个目标检测环节描述比较详细的这篇文章，有需要的小伙伴可以参考。</p><h1 id="本文中主要介绍我是如何在Ubuntu18-04上训练一个Yolo3目标检测模型"><a href="#本文中主要介绍我是如何在Ubuntu18-04上训练一个Yolo3目标检测模型" class="headerlink" title="本文中主要介绍我是如何在Ubuntu18.04上训练一个Yolo3目标检测模型"></a>本文中主要介绍我是如何在Ubuntu18.04上训练一个Yolo3目标检测模型</h1><a id="more"></a><p>正在撰写，敬请期待</p><h2 id="OK！本期关于如何在Ubuntu上训练一个Yolo3模型就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何在Ubuntu上训练一个Yolo3模型就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何在Ubuntu上训练一个Yolo3模型就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何在Ubuntu上训练一个Yolo3模型就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> Ubuntu18.04 </category>
          
          <category> YOLO3 </category>
          
          <category> Machine Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu18.04 </tag>
            
            <tag> YOLO3 </tag>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何解决来自github的警告:Dependabot alerts</title>
      <link href="/2021/01/22/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/"/>
      <url>/2021/01/22/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/</url>
      
        <content type="html"><![CDATA[<p>最近没有怎么注意我的博客，今天准备到github上学习，发现来自github的警告，作为一个稍微有点强迫症的人，这怎么受得了这些<a href="https://docs.github.com/en/github/managing-security-vulnerabilities/about-alerts-for-vulnerable-dependencies" target="_blank" rel="noopener">Dependabot alerts</a>警告</p><a id="more"></a><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/1.jpg" alt=""></p><p>发现诸如下图的多个官方警告</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/2.jpg" alt=""></p><p>打开yarn.lock</p><p>将其中代码复制到新建的yarn.txt文件中，然后使用yarn.txt文件通过更改后缀名的方式，将项目的原yarn.lock文件替换。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/3.jpg" alt=""></p><p>再将项目文件<a href="https://blog.csdn.net/Lucky_LXG/article/details/77849212" target="_blank" rel="noopener">使用git推送部署到github</a>的远端服务器上</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/5.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/6.jpg" alt=""></p><p>好了，问题终于解决了</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%9D%A5%E8%87%AAgithub%E7%9A%84%E8%AD%A6%E5%91%8A-Dependabot-alerts/7.jpg" alt=""></p><h2 id="OK！本期关于如何解决来自github的警告-Dependabot-alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何解决来自github的警告-Dependabot-alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何解决来自github的警告:Dependabot alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何解决来自github的警告:Dependabot alerts就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为自己的爱机神舟TX6-CT5DA加装固态硬盘</title>
      <link href="/2021/01/22/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/"/>
      <url>/2021/01/22/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>在学习Linux系统的使用的过程中，在学习了一段时间之后，我觉得有必要为自己的战神（TX6-CT5DA）加装一块128G的固态硬盘用于安装ubuntu18.04系统，本文属于Ubuntu与ROS系列。</p><h1 id="在本文中主要介绍我是如何为自己的爱机神舟TX6-CT5DA加装固态硬盘"><a href="#在本文中主要介绍我是如何为自己的爱机神舟TX6-CT5DA加装固态硬盘" class="headerlink" title="在本文中主要介绍我是如何为自己的爱机神舟TX6-CT5DA加装固态硬盘"></a>在本文中主要介绍我是如何为自己的爱机神舟TX6-CT5DA加装固态硬盘</h1><a id="more"></a><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p><font color=#999AAA >项目场景：如果你想使用Windows与Linux两种系统，比如Ubuntu之类的，同时你追求更高的性能，那么显然双系统可能是你更好的选择。</font></p><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>1.提前下载好自己需要的Linux安装镜像，比如Ubuntu16.04</p><p>2.准备一个大小至少为32G的U盘</p><p>3.准备一块不小于128G的固态硬盘，不建议机械硬盘，这里就不多解释了。</p><p>这里附上我所购买的<a href="https://m.tb.cn/h.488QMNG?sm=429b6e" target="_blank" rel="noopener">宏想固态</a></p><p>4.准备必要的拆机工具，比如螺丝刀。</p><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><p>1.首先将笔记本电脑关机，如果是Win10家庭版可以使用快捷组合键Win+X，U，U即可快速关机。</p><p>2.取下笔记本的电池</p><p>3.将笔记本后盖的螺丝拧下来</p><p>4.使用专用的撬棒沿着后盖的纹路一点一点撬开，过程中要胆大心细，每撬开一处可以听到清脆的响声，注意过程中不要太过着急，卡扣比较脆弱，很容易弄断。</p><p><font color=#999AAA >注意：不建议大力出奇迹的想法，出问题的看客责任自负，还有请小白同学慎重考虑是否要亲力亲为。</font></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/1.jpg" alt=""></p><p>这个是我拆机后的图片，神舟战神T系列可以看到，英特尔 i5 9400 CPU芯片并不是直接焊在主板上的，也就是说，之后有可能可以更换更高性能的CPU芯片，比如i5 10400，当然这还是需要考虑功耗与散热方面的影响。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/2.jpg" alt=""></p><p>因为是蓝天公模，所以后盖也很有特点。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/3.jpg" alt=""></p><p>这是加上固态硬盘后的图片，直接将其对应好接口插入即可</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/4.jpg" alt=""></p><p>可以看到，还有一个内存条接口和M.2固态硬盘接口</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/5.jpg" alt=""></p><p>难得自己拆机一次，建议备好清灰工具之类的，可以为自己的电脑清清灰。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/6.jpg" alt=""></p><p>清灰完成后先不要着急合上后盖，先装上电池，开机检查新的固态硬盘能否正常进行读写操作。避免返工。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%88%B1%E6%9C%BA%E7%A5%9E%E8%88%9FTX6-CT5DA%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/7.jpg" alt=""></p><p>检查完成后没有问题，先进行关机，因为不取下电池，无法安装后盖。</p><p>之后按照正常流程装回所有部分即可。</p><h2 id="OK！本期关于如何为自己的爱机神舟TX6-CT5DA加装固态硬盘就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何为自己的爱机神舟TX6-CT5DA加装固态硬盘就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何为自己的爱机神舟TX6-CT5DA加装固态硬盘就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何为自己的爱机神舟TX6-CT5DA加装固态硬盘就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> 神舟战神TX6-CT5DA </category>
          
          <category> 固态硬盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神舟战神TX6-CT5DA </tag>
            
            <tag> 固态硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在VScode中跑一个从github上fork下来的项目</title>
      <link href="/2021/01/22/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
      <url>/2021/01/22/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>​    在学习VS code的使用的过程中，花费了一个白天时间看各种教程，试图并从中找出快速上手项目基配置的具体步骤。在一天半的时间里不断试错，最后，共计花费20小时成功在VS code中运行了自己的第一个项目，虽然这个项目不是我完成的，但这次经历对于现在的我来说还是至关重要的。</p><h1 id="在本文中主要介绍我是如何在VS-code中运行从github上fork下来的项目"><a href="#在本文中主要介绍我是如何在VS-code中运行从github上fork下来的项目" class="headerlink" title="在本文中主要介绍我是如何在VS code中运行从github上fork下来的项目"></a>在本文中主要介绍我是如何在VS code中运行从github上fork下来的项目</h1><a id="more"></a><p>首先我们需要在VS code中git clone下来一整个项目，本次教程以<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGO项目</a>为例</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/11.jpg" alt=""></p><p>打开一个新终端，使用如下命令clone下整个项目。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Molunerfinn&#x2F;PicGo.git</span><br></pre></td></tr></table></figure><p>首先，查看开发文档README.md文件</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/12.jpg" alt=""></p><p>直接执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run electron:serve</span><br></pre></td></tr></table></figure><p>会产生下图报错，解法可参考<a href="https://www.jianshu.com/p/db2ac92842d5" target="_blank" rel="noopener">npm ERR! code ELIFECYCLE</a></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/14.jpg" alt=""></p><p>发现是没有执行npm install命令安装必要的插件</p><p>在开发文档中可以看到直接使用npm install命令会导致报错，解法可以参考<a href="https://blog.csdn.net/sinat_24140965/article/details/112867445" target="_blank" rel="noopener">npm设置阿里云镜像并使用npm安装yarn</a></p><p>所以我们首先执行以下命令更改镜像源为淘宝源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org --global    # npm设置阿里云镜像</span><br><span class="line">npm config set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;dist --global</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry   # 查看已设置的结果</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn -v   # 查看安装的版本</span><br></pre></td></tr></table></figure><p>然后再执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install   # 安装所需的插件</span><br></pre></td></tr></table></figure><p>如果命令执行过程中卡在这个页面，解法可以参考<a href="https://blog.csdn.net/weixin_38722500/article/details/105435699" target="_blank" rel="noopener">解决npm一直停在”node ./download-chromedriver.js”的问题</a></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/13.jpg" alt=""></p><p>先执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install chromedriver --chromedriver_cdnurl&#x3D;http:&#x2F;&#x2F;cdn.npm.taobao.org&#x2F;dist&#x2F;chromedriver</span><br></pre></td></tr></table></figure><p>再执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>应该不会再卡住了</p><p>之后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run electron:build     #生产模式  对项目文件进行编译</span><br></pre></td></tr></table></figure><p>对项目文件进行编译，产生如下报错，解法可以参考<a href="https://blog.csdn.net/kyq0417/article/details/111266776" target="_blank" rel="noopener">Electron-Builder打包时报错could not find</a></p><p>在目录node_module/app-builder-lib/out/targets/nsis/NsisTarget.js下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;node_module&#x2F;app-builder-lib&#x2F;out&#x2F;targets&#x2F;nsis&#x2F;NsisTarget.js</span><br><span class="line">async executeMakensis(defines, commands, script) &#123;</span><br><span class="line">    const args &#x3D; this.options.warningsAsErrors &#x3D;&#x3D;&#x3D; false ? [] : [&quot;-WX&quot;];</span><br><span class="line">    &#x2F;&#x2F;此处新增如下代码</span><br><span class="line">    args.push(&quot;-INPUTCHARSET&quot;, &quot;UTF8&quot;);</span><br><span class="line">    &#x2F;&#x2F;结束</span><br><span class="line">    for (const name of Object.keys(defines)) &#123;</span><br><span class="line">      const value &#x3D; defines[name];</span><br><span class="line"></span><br><span class="line">      if (value &#x3D;&#x3D; null) &#123;</span><br><span class="line">        args.push(&#96;-D$&#123;name&#125;&#96;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        args.push(&#96;-D$&#123;name&#125;&#x3D;$&#123;value&#125;&#96;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/1.jpg" alt=""></p><p>再次使用如下命令对项目重新进行编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run electron:build     #生产模式  对项目文件进行编译</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/2.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/3.jpg" alt=""></p><p>执行如下命令,可以看到项目终于运行起来了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run electron:serve     #开发模式  让项目运行起来</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/4.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/5.jpg" alt=""></p><p>查看一下项目跑起来的页面</p><p>第一个页面</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/6.jpg" alt=""></p><p>第二个页面</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%A6%82%E4%BD%95%E5%9C%A8VScode%E4%B8%AD%E8%B7%91%E4%B8%80%E4%B8%AA%E4%BB%8Egithub%E4%B8%8Afork%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%A1%B9%E7%9B%AE/7.jpg" alt=""></p><p>可以看到这个项目虽然跑起来了，但是并没有一些内容显示出来，这算是一点缺憾的地方吧。</p><h2 id="OK！本期关于如何在VScode中跑一个从github上fork下来的项目就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于如何在VScode中跑一个从github上fork下来的项目就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于如何在VScode中跑一个从github上fork下来的项目就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于如何在VScode中跑一个从github上fork下来的项目就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h2>]]></content>
      
      
      <categories>
          
          <category> VScode </category>
          
          <category> github </category>
          
          <category> fork </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> VScode </tag>
            
            <tag> fork </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于一些不可复制文档的操作技巧</title>
      <link href="/2021/01/13/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2021/01/13/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="对于一些不可复制文档的操作技巧"><a href="#对于一些不可复制文档的操作技巧" class="headerlink" title="对于一些不可复制文档的操作技巧"></a>对于一些不可复制文档的操作技巧</h1><h1 id="背景介绍："><a href="#背景介绍：" class="headerlink" title="背景介绍："></a>背景介绍：</h1><p>如果你想白嫖一篇包含付费内容的文档，比如XX文库之类的，或许接下来的内容会对你很有帮助。</p><a id="more"></a><h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p><font color=#999AAA >项目场景：如果你想白嫖一篇包含付费内容的文档，比如XX文库之类的。</font></p><h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p><font color=#999AAA >提示：提示需要登录或付费才能下载该内容，如下图所示。</font></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/1.jpg" alt=""></p><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p><font color=#999AAA >提示：</font></p><p>近年来互联网企业对文章的版权重视和自身盈利模式的需要共同影响。</p><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p><strong>方案1</strong><br>以一篇英语四级作文模板为例，<br>1.首先寻找好你所需要的模板内容<br>2.确保将网页展开完全<br>3.单击鼠标右键，将网页保存在桌面上</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/2.jpg" alt=""></p><p>4.在桌面上双击以.html结尾的文件，将会在浏览器中打开它</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/3.jpg" alt=""></p><p>5.在浏览器中，你会发现对页面上的文字进行复制是完全可行的。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/4.jpg" alt=""></p><p>6.先不要太高兴，在桌面上新建一个.txt文件，将复制来的文本内容粘贴进去。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/5.jpg" alt=""></p><p>7.查看文本内容中是否有乱码，没有问题后</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/5.jpg" alt=""></p><p>对.txt文档内进行Ctrl+A 及Ctrl+C操作</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/6.jpg" alt=""></p><p>8.然后在将其粘贴在自己需要的文本格式中，如.doc/docx文档中。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/7.jpg" alt=""></p><p>7-8步骤也可使用无格式粘贴</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/12.jpg" alt=""></p><p><strong>方案2</strong><br>选择好自己需要的文字内容，右击选择检查或者按下键盘的F12键，</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/8.jpg" alt=""></p><p>找到设置，然后滑到底部，找到Disable javascript进行勾选</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/9.jpg" alt=""></p><p>然后不要关闭页面，直接对需要内容进行复制即可。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/10.jpg" alt=""></p><p>在双击打开，接下来就可以随意进行复制了</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E5%AF%B9%E4%BA%8E%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%8F%AF%E5%A4%8D%E5%88%B6%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/11.jpg" alt=""></p><p><font color=#999AAA >   </font></p><h3 id="OK！本期关于对于一些不可复制文档的操作技巧就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于对于一些不可复制文档的操作技巧就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于对于一些不可复制文档的操作技巧就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于对于一些不可复制文档的操作技巧就到此为止。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h3><h3 id="注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收"><a href="#注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收" class="headerlink" title="(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)"></a>(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)</h3>]]></content>
      
      
      <categories>
          
          <category> 操作技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机ubuntu16.04与ROS-kinetic</title>
      <link href="/2020/12/28/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/"/>
      <url>/2020/12/28/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机ubuntu16-04与ROS-kinetic的安装"><a href="#虚拟机ubuntu16-04与ROS-kinetic的安装" class="headerlink" title="虚拟机ubuntu16.04与ROS-kinetic的安装"></a>虚拟机ubuntu16.04与ROS-kinetic的安装</h1><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><p>​        最近由于要做的一个项目涉及到ROS与机器视觉以及一些SLAM技术，所以学习了一下机器人操作系统ROS在ubuntu上的安装，由于开始时经验不足，为了能有更高的容错率，我选择在Virtual Box上安装Ubuntu16.04虚拟机，得益于虚拟机可以轻松进行备份和恢复的优势，我在进行Ros的安装时更有信心。</p><a id="more"></a><h3 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h3><p>​        Windows10家庭版 + Ubuntu16.04虚拟机 + ROS kinetic</p><h2 id="安装流程-虚拟机-Ubuntu安装教程"><a href="#安装流程-虚拟机-Ubuntu安装教程" class="headerlink" title="安装流程   虚拟机+Ubuntu安装教程"></a>安装流程   虚拟机+Ubuntu安装教程</h2><h4 id="方案1-VMware虚拟机安装ubuntu16-04"><a href="#方案1-VMware虚拟机安装ubuntu16-04" class="headerlink" title="方案1.VMware虚拟机安装ubuntu16.04"></a>方案1.VMware虚拟机安装ubuntu16.04</h4><p>可以参考火耳软件安装的<a href="http://mp.weixin.qq.com/s?__biz=MzU0MTg5NDkzNA==&amp;mid=2247498154&amp;idx=1&amp;sn=a2947b925ffb530d7690149c3b3f2232&amp;chksm=fb2049d3cc57c0c5743da147a8b8408eb73ce61262f833eb6ecca7fb433a347241a08e2273c7&amp;mpshare=1&amp;scene=23&amp;srcid=1228eMZg5msv2v0islQnklYv&amp;sharer_sharetime=1609158326393&amp;sharer_shareid=970e485b437aa6a7a3cae61fe48119bd#rd" target="_blank" rel="noopener">这篇文章</a></p><h4 id="方案2-Virtual-Box虚拟机安装ubuntu16-04"><a href="#方案2-Virtual-Box虚拟机安装ubuntu16-04" class="headerlink" title="方案2.Virtual Box虚拟机安装ubuntu16.04"></a>方案2.Virtual Box虚拟机安装ubuntu16.04</h4><p>可以参考博客园上的<a href="https://www.cnblogs.com/luengmingbiao/p/10859905.html" target="_blank" rel="noopener">这篇文章</a></p><h2 id="安装流程-ubuntu16-04-ROS（kentic）"><a href="#安装流程-ubuntu16-04-ROS（kentic）" class="headerlink" title="安装流程     ubuntu16.04+ROS（kentic）"></a>安装流程     ubuntu16.04+ROS（kentic）</h2><p><a href="http://wiki.ros.org/melodic/Installation/Ubuntu" target="_blank" rel="noopener">ROS官方安装教程</a></p><h4 id="1-注意对应好版本"><a href="#1-注意对应好版本" class="headerlink" title="1.注意对应好版本"></a>1.注意对应好版本</h4><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/ROS_Installation_Options.jpg" alt=""></p><h4 id="2-配置软件源"><a href="#2-配置软件源" class="headerlink" title="2.配置软件源"></a>2.配置软件源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#39;echo &quot;deb http:&#x2F;&#x2F;packages.ros.org&#x2F;ros&#x2F;ubuntu $(lsb_release -sc) main&quot; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ros-latest.list&#39;</span><br></pre></td></tr></table></figure><p>使用alinyun镜像源即可</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/apply_install_sources.jpg" alt=""></p><h4 id="3-添加密钥"><a href="#3-添加密钥" class="headerlink" title="3.添加密钥"></a>3.添加密钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#39;hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/add_key.jpg" alt=""></p><h4 id="4-安装ROS（桌面完整版Desktop-Full）"><a href="#4-安装ROS（桌面完整版Desktop-Full）" class="headerlink" title="4.安装ROS（桌面完整版Desktop-Full）"></a>4.安装ROS（桌面完整版Desktop-Full）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/install_ros_kentic_full1.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/install_ros_kentic_full11.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/install_ros_kentic_full2.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/install_ros_kentic_full3.jpg" alt=""></p><p>独立功能包的安装，其中PACKAGE代表功能包的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-PACKAGE</span><br></pre></td></tr></table></figure><p>例如安装机器人SLAM地图建模gmapping功能包时，可以使用以下命令进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-slam-gmapping</span><br></pre></td></tr></table></figure><h4 id="5-初始化ROS"><a href="#5-初始化ROS" class="headerlink" title="5.初始化ROS"></a>5.初始化ROS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/sudo_rosdep_init_error.jpg" alt=""></p><p>直接创建一个sources.list.d文件夹，在目录下新建一个20-default.list文件</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/init_error_save.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/rosdep_update_error.jpg" alt=""></p><p>如遇到rosdep update时出现错误，可以参考<a href="https://blog.csdn.net/mrh1714348719/article/details/103803110?utm_source=app" target="_blank" rel="noopener">CSDN大佬文章</a></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/rosdep_update.jpg" alt=""></p><h4 id="6-配置环境变量"><a href="#6-配置环境变量" class="headerlink" title="6.配置环境变量"></a>6.配置环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source &#x2F;opt&#x2F;ros&#x2F;kinetic&#x2F;setup.bash&quot; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><h4 id="7-安装完成检测"><a href="#7-安装完成检测" class="headerlink" title="7.安装完成检测"></a>7.安装完成检测</h4><p>打开terminal输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/roscore.jpg" alt=""></p><p>运行turtlesim程序</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/rosrun_rurtlesim.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E8%99%9A%E6%8B%9F%E6%9C%BAubuntu16-04%E4%B8%8EROS-kinetic/rosrun_turtlesim_turtle_teleop_key.jpg" alt=""></p><h3 id="OK！本期关于虚拟机ubuntu16-04与ROS-kinetic的安装就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于虚拟机ubuntu16-04与ROS-kinetic的安装就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于虚拟机ubuntu16.04与ROS-kinetic的安装就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于虚拟机ubuntu16.04与ROS-kinetic的安装就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h3><h3 id="注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收"><a href="#注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收" class="headerlink" title="(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)"></a>(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)</h3>]]></content>
      
      
      <categories>
          
          <category> ubuntu16.04 </category>
          
          <category> ROS-kinetic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu16.04 </tag>
            
            <tag> ROS-kinetic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客创建之路</title>
      <link href="/2020/04/16/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/"/>
      <url>/2020/04/16/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/</url>
      
        <content type="html"><![CDATA[<h1 id="教你免费搭建个人博客-Hexo-amp-Github-2"><a href="#教你免费搭建个人博客-Hexo-amp-Github-2" class="headerlink" title="教你免费搭建个人博客(Hexo&amp;Github)  2"></a>教你免费搭建个人博客(Hexo&amp;Github)  2</h1><p>上一期教程我们已经搭建好Blog的基础框架，准备工作应该进行得很顺利，在接下来的基础框架完善中，小编会分为两个部分：</p><h3 id="在本文中主要介绍博客基础功能的构建"><a href="#在本文中主要介绍博客基础功能的构建" class="headerlink" title="在本文中主要介绍博客基础功能的构建"></a>在本文中主要介绍博客基础功能的构建</h3><a id="more"></a><p>首先，在你电脑空间多的地方创建一个存放博客程序，主题和文章的文件夹，可以起名为Blog，</p><p>记住文件路径中最好不要有中文。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/blog.jpg" alt=""></p><p>建好之后打开文件夹Blog，鼠标右击，选择【Git Bash Here】进入Git命令行窗口。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/Git%E5%91%BD%E4%BB%A4.jpg" alt=""></p><p>输入以下代码使用npm安装Hexo博客程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果出现报错</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/npm-install-error1.jpg" alt=""></p><p>使用下面这段代码安装淘宝源npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装完成</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/npm-install-success.jpg" alt=""></p><p>继续输入下面的代码安装淘宝源cnpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/npm-install-cnpm.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>安装初始化组件</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-init.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-clean.jpg" alt=""></p><p>继续输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-g&&gulp.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-g&&gulp-else.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s  # 在http:&#x2F;&#x2F;localhost:4000&#x2F;进行本地预览</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-s.jpg" alt=""></p><p>如果执行hexo d命令出现下图错误是因为缺少hexo-deployer-git插件</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-d-error.jpg" alt=""></p><p>执行以下命令即可解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/error-saving.jpg" alt=""></p><p>继续执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -- save hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/npm-reinstall.jpg" alt=""></p><p>问题解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; gulp</span><br></pre></td></tr></table></figure><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-g&&gulp.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-g&&gulp-else.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器按照提示输入<a href="http://localhost:4000进行预览">http://localhost:4000进行预览</a></p><p>预览完成后 按下 Ctrl + C 结束预览</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-s.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>将写好的博客进行部署Github仓库</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF2/hexo-d-success.jpg" alt=""></p><p>打开   https://用户名.github.io    进行查看</p><p>最后小编列举一些博客常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;博客标题&quot;</span><br><span class="line">hexo clean       清除静态缓存</span><br><span class="line">hexo g           生成博客文章</span><br><span class="line">hexo s           生成页面进行本地预览</span><br><span class="line">hexo d           部署博客文章</span><br><span class="line">hexo g &amp;&amp; gulp   博客压缩以提高访问速率</span><br></pre></td></tr></table></figure><h3 id="OK！这一期期关于Hexo以及本地环境的配置就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！这一期期关于Hexo以及本地环境的配置就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！这一期期关于Hexo以及本地环境的配置就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！这一期期关于Hexo以及本地环境的配置就到此为止。接下来后续内容会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h3><h3 id="注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收"><a href="#注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收" class="headerlink" title="(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)"></a>(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)</h3>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> yilia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> yilia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客创建之路</title>
      <link href="/2020/04/11/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/"/>
      <url>/2020/04/11/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/</url>
      
        <content type="html"><![CDATA[<h1 id="教你免费搭建个人博客-Hexo-amp-Github-1"><a href="#教你免费搭建个人博客-Hexo-amp-Github-1" class="headerlink" title="教你免费搭建个人博客(Hexo&amp;Github)  1"></a>教你免费搭建个人博客(Hexo&amp;Github)  1</h1><p>​      在基本完成搭建自己博客的过程中，花费了一天时间看各种教程，试图并从中找出搭建博客的最优办法。在一天半的时间里，通过在与各种ERROE的角逐中不断取胜，共计花费60小时成功创建了自己的第一个博客。</p><h3 id="在本文中主要介绍博客基础框架的搭建"><a href="#在本文中主要介绍博客基础框架的搭建" class="headerlink" title="在本文中主要介绍博客基础框架的搭建"></a>在本文中主要介绍博客基础框架的搭建</h3><a id="more"></a><h3 id="准备工作（搭建Blog基础框架）："><a href="#准备工作（搭建Blog基础框架）：" class="headerlink" title="准备工作（搭建Blog基础框架）："></a>准备工作（搭建Blog基础框架）：</h3><p>Hexo基于Node.js，在搭建过程中还需要安装npm和git,安装Node.js和Git构建本地环境。</p><h5 id="1-Node-js安装："><a href="#1-Node-js安装：" class="headerlink" title="1.Node.js安装："></a>1.Node.js安装：</h5><p>Node.js官网：<a href="http://nodejs.org/zh-cn/" target="_blank" rel="noopener">http://nodejs.org/zh-cn/</a></p><p>进入官网后下载Windows（x64）长期支持版。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/node.js1.png" alt=""></p><p>安装位置最好选择默认，其他均选择默认，之后点击下一步。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/Node.js.png" alt=""></p><p>之后按照提示操作安即可，这里就不再赘述了。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/Node.js0.jpg" alt=""></p><p>如果在安装过程中出现Warning 1909，无法创建快捷方式的问题，（如下图的问题）</p><p>请自行参考百度文库：《win7安装程序警告1909无法创建快捷方式》</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1909.jpg" alt=""></p><p><a href="https://wenku.baidu.com/view/4ad59110964bcf84b9d57ba5.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/4ad59110964bcf84b9d57ba5.html</a></p><h5 id="2-Git安装："><a href="#2-Git安装：" class="headerlink" title="2.Git安装："></a>2.Git安装：</h5><p>Git下载官网：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p>选择适用自己的平台，由于我的电脑是Windows10系统，所以我选择Windows，点击下载。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/git.png" alt=""></p><p>之后选择自己电脑对应的位数下载，我的是X64位电脑。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/git1.png" alt=""></p><p>安装位置选择默认，之后点击下一步Next。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/git2.png" alt=""></p><p>安装很简单，不再赘述</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/git5.png" alt=""></p><h5 id="3-验证Node-js和Git是否安装成功，即本地环境是否搭建成功。"><a href="#3-验证Node-js和Git是否安装成功，即本地环境是否搭建成功。" class="headerlink" title="3.验证Node.js和Git是否安装成功，即本地环境是否搭建成功。"></a>3.验证Node.js和Git是否安装成功，即本地环境是否搭建成功。</h5><p>win建+R打开运行。输入cmd，进入命令提示符。</p><p>(在英文输入法下)     依次输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p>如果出现下图，即表示本地环境搭建成功。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/win1.png" alt=""></p><h5 id="4-打开GitHub官网"><a href="#4-打开GitHub官网" class="headerlink" title="4.打开GitHub官网"></a>4.打开GitHub官网</h5><p>GitHub官网: <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><p>点击Sign Up注册账户</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub1.jpg" alt=""></p><p>注册用户名，绑定邮箱</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub0.jpg" alt=""></p><p>选择免费的账户</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub13.jpg" alt=""></p><p>进入如下界面</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub14.jpeg" alt=""></p><p>点击Skip this step 跳过，进入如下界面</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub20.jpeg" alt=""></p><p>进入邮箱验证</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub16.jpeg" alt=""></p><p>登录GitHub账户</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub11.jpeg" alt=""></p><p>进入邮箱查看验证码</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub17.jpeg" alt=""></p><p>输入验证码</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub18.jpeg" alt=""></p><p>登陆后</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub19.jpeg" alt=""></p><p>接下来在桌面或者在哪都行，右击鼠标，点击Git Bash Here</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/Git_Bash.jpg" alt=""></p><p>依次输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p>再输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Github邮箱&quot;</span><br></pre></td></tr></table></figure><p>让后回首回车，创建SSH密钥</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/1586608444863.jpeg" alt=""></p><p>进入如下路径用记事本打开id_rsa.pub文件，复制文件内容。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/1586608450608.jpeg" alt=""></p><p>登录GitHub，进入setting</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/1586608439053.jpeg" alt=""></p><p>选择左边SSH and GPG Keys选项，添加密钥。点击New SSH Key添加</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1586607944334.jpg" alt=""></p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1586607561800.jpg" alt=""></p><p>Title可以随便起，把刚才复制的密钥粘贴到Key中，点击Add SSH Key添加完成</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1586607565940.jpg" alt=""></p><p>再次打开Git Bash 并输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现Are you sure…….输入yes回车。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1586607577804.jpg" alt=""></p><p>最后显示You ‘ve successfully……表示连接成功。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/CSDN_1586607582440.jpg" alt=""></p><p>点击右上角加号，点击New repository新建GitHub Pages仓库，创建后默认启用HTTPS。</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub5.jpg" alt=""></p><p>新建的仓库如下，是否让你眼前一亮</p><p><img src="https://github.com/sujit-168/Blog-Picture/raw/master/My%20Blog/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF1/GitHub19.jpeg" alt=""></p><p>如果操作中有问题请点开下面的链接根据教程安装</p><p><a href="https://blog.csdn.net/weixin_43729943/article/details/103838650?utm_source=app" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43729943/article/details/103838650?utm_source=app</a></p><p>其中包括接下来的一些步骤，可以参考借鉴教程。</p><h3 id="OK！本期关于GitHub的注册以及本地环境的搭建就到此为止。接下来后续系列会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"><a href="#OK！本期关于GitHub的注册以及本地环境的搭建就到此为止。接下来后续系列会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！" class="headerlink" title="OK！本期关于GitHub的注册以及本地环境的搭建就到此为止。接下来后续系列会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！"></a>OK！本期关于GitHub的注册以及本地环境的搭建就到此为止。接下来后续系列会分几期更新。喜欢的话请支持、转发、订阅！同时也欢迎各位大佬指出不足之处！在此本人万分感谢！</h3><h3 id="注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收"><a href="#注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收" class="headerlink" title="(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)"></a>(注明：本文中的方法在撰写过程中得益于对各位前辈大佬的经验进行借鉴和吸收)</h3>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/26/hello-world/"/>
      <url>/2019/08/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> first </category>
          
          <category> page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first </tag>
            
            <tag> page </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
